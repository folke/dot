- name: Create ~/.config
  ansible.builtin.file:
    path: ~/.config
    state: directory
    mode: "0755"

- name: Find .config files
  ansible.builtin.find:
    paths: "{{ dot_repo_root }}/config/"
    recurse: false
    file_type: any
    hidden: true
  register: dot_config

- name: ~/.config/
  ansible.builtin.file:
    src: "{{ item.path }}"
    dest: "~/.config/{{ item.path | basename }}"
    state: link
  loop: "{{ dot_config.files }}"
  loop_control:
    label: "~/.config/{{ item.path | basename }}"

- name: Create ~/.local/bin
  ansible.builtin.file:
    path: ~/.local/bin
    state: directory
    mode: "0755"

- name: Find bin files
  ansible.builtin.find:
    paths: "{{ dot_repo_root }}/bin/"
    recurse: false
    file_type: any
  register: dot_bin

- name: ~/.local/bin/
  ansible.builtin.file:
    src: "{{ item.path }}"
    dest: "~/.local/bin/{{ item.path | basename }}"
    state: link
  loop: "{{ dot_bin.files }}"
  loop_control:
    label: "~/.local/bin/{{ item.path | basename }}"

- name: .bashrc
  ansible.builtin.copy:
    dest: ~/.bashrc
    content: "source <(starship init bash --print-full-init)"
    mode: "0644"

- name: .zshrc
  ansible.builtin.copy:
    dest: ~/.zshrc
    content: "source <(starship init zsh --print-full-init)"
    mode: "0644"

- name: .hushlogin
  ansible.builtin.copy:
    dest: ~/.hushlogin
    content: ""
    mode: "0644"

- name: .gitconfig
  ansible.builtin.file:
    src: ~/.config/.gitconfig
    dest: ~/.gitconfig
    state: link

- name: Neovim config symlink
  ansible.builtin.file:
    src: "{{ dot_repo_root }}/nvim"
    dest: ~/.config/nvim
    state: link

- name: .ssh/config
  ansible.builtin.copy:
    src: ~/.config/.ssh.config
    dest: ~/.ssh/config
    mode: "0600"

- name: .ssh/config/control
  ansible.builtin.file:
    path: ~/.ssh/control
    state: directory
    mode: "0700"

- name: GPG agent configuration
  ansible.builtin.copy:
    dest: ~/.gnupg/gpg-agent.conf
    content: "pinentry-program /bin/pinentry"
    mode: "0644"

- name: Create ~/.local/share/applications
  ansible.builtin.file:
    path: ~/.local/share/applications
    state: directory
    mode: "0755"

- name: Neovim desktop file
  ansible.builtin.copy:
    src: roles/dot/files/nvim.desktop
    dest: ~/.local/share/applications/nvim.desktop
    mode: "0644"

- name: Create ~/.config/systemd/user
  ansible.builtin.file:
    path: ~/.config/systemd/user
    state: directory
    mode: "0755"

- name: Bob update systemd service
  ansible.builtin.copy:
    src: roles/dot/files/bob-update.service
    dest: ~/.config/systemd/user/bob-update.service
    mode: "0644"
  notify: Reload systemd user daemon

- name: Bob update systemd timer
  ansible.builtin.copy:
    src: roles/dot/files/bob-update.timer
    dest: ~/.config/systemd/user/bob-update.timer
    mode: "0644"
  notify: Reload systemd user daemon

- name: Enable bob-update.timer
  ansible.builtin.systemd:
    name: bob-update.timer
    enabled: true
    state: started
    scope: user

- name: Enable gotify-desktop service
  ansible.builtin.systemd:
    name: gotify-desktop.service
    enabled: true
    state: started
    scope: user
